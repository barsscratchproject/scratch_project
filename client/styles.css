body {
  /* background-color: rgb(194, 200, 255); */
  /* background-color: rgb(237, 237, 243); */
  background-color: white;
  width: 100%;
  margin: 0px 0px;
  padding: 0px 0px;
}

/* button:hover{
  cursor: pointer;
  filter: brightness(75%);
} */

/* NAVBAR (state storage) /*
/* Navbar styling; appears on the top of every page */
.navBar {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
  background-color: rgb(237, 237, 243);
  /* border: 1px solid greenyellow; */
  width: 100%;
  height: 100px;
  font-size: 30px;
}

/* unvisited navbar link */
.navLinks:link {
  /* color: rgb(94, 109, 243); */
  color: rgb(71, 88, 240);
  /* background-color: red; */
  border-radius: 5px;
}

/* visited navbar link */
.navLinks:visited {
  /* color: rgb(94, 109, 243); */
  color: rgb(71, 88, 240);
  /* background-color: red; */
  border-radius: 5px;
}

/* mouse over navbar link */
.navLinks:hover {
  /* background-color: rgb(215, 219, 255); */
  color: red;
}

/* selected navbar link */
.navLinks:active {
  /* background-color: rgb(215, 219, 255); */
  color: red;
}

/* navbar home/dashboard logo */
.logo {
  display: flex;
  align-items: center;
  justify-content: center;
  background-image:
  linear-gradient(180deg, white 3rem, #F0A4A4 calc(3rem), #F0A4A4 calc(3rem + 2px), transparent 1px),
  repeating-linear-gradient(0deg, transparent, transparent 1.5rem, rgb(201, 201, 201) 1px, rgb(215, 219, 255) calc(1.5rem + 1px));
  box-shadow: 1px 1px 3px rgba(0,0,0,.25);
  height: 40px;
  width: 80px;
  margin: auto;
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}


/* DASHBOARD PAGE /*
/* 
Header at top of dashboard page, BEFORE/ABOVE deckscontainer display
displays the text "Welcome, User!" 
*/
.welcomeUser {
  color: rgb(36, 42, 95);
  /* margin-top: 20px; */
  margin-bottom: 60px;
  font-size: 50px;
  display: flex;
  justify-content: center;
}

/* ENTIRE dashboard container underneath the "welcome, user" header */
.dashboardBox {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 99%;
  /* border: 1px solid red; */
  /* background-color: white; */
}

/* Grid inside dashboard box; contains add deck and all other deck icons */
.deckGrid {
  display: grid;
  /* grid-template-columns: auto auto auto auto; */
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: auto;
  grid-gap: 50px;
  width: 90%;
  /* border: 1px solid orange; */
  background-color: white;
  margin-bottom: 100px;
  padding: 30px 0px 50px 0px;
}

/* A single deck icon as rendered on the dashboard page */
.singleDeckIcon {
  background-image:
  linear-gradient(180deg, white 3rem, #F0A4A4 calc(3rem), #F0A4A4 calc(3rem + 2px), transparent 1px),
  /* repeating-linear-gradient(0deg, transparent, transparent 1.5rem, #DDD 1px, #DDD calc(1.5rem + 1px)); */
  /* repeating-linear-gradient(0deg, transparent, transparent 1.5rem, rgb(215, 219, 255) 1px, rgb(215, 219, 255) calc(1.5rem + 1px)); */
  repeating-linear-gradient(0deg, transparent, transparent 1.5rem, rgb(215, 219, 255) 1px, rgb(159, 168, 255) calc(1.5rem + 1px));
  box-shadow: 1px 1px 3px rgba(0,0,0,.25);
  height: 10rem;
  width: 250px;
  margin: auto;
  position: relative;
  top: 50%;
  transform: translateY(-50%);

  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

/* Dashboard page single deck h1 TOPIC header */
.oneDeck {
  display: flex;
  justify-content: center;
  color: rgb(230, 34, 2);
}

/* Dashboard page single deck edit buttons CONTAINER */
.editBtnContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 0px 0px -5px 0px;
  /* background-color: blue; */
}

/* Dashboard page single deck "edit" button */
.singleDeckEditBtn {
  background-color: transparent;
  color: rgb(68, 68, 68);
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
}

.singleDeckEditBtn:hover {
  cursor: pointer;
  background-color: rgb(230, 34, 2);
  color: white;
}

/* Dashboard page single deck "delete" button */
.singleDeckDeleteBtn {
  background-color: transparent;
  color: rgb(68, 68, 68);
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
}

.singleDeckDeleteBtn:hover {
  cursor: pointer;
  background-color: rgb(230, 34, 2);
  color: white;
  /* background-color: F0A4A4; */
}

/* Dashboard page deck creation element */
.createDeckCard {
  display: flex;
  /* flex-direction: column; */
  align-items: center;
  justify-content: center;
  background-image:
  linear-gradient(180deg, white 3rem, #F0A4A4 calc(3rem), #F0A4A4 calc(3rem + 2px), transparent 1px),
  repeating-linear-gradient(0deg, transparent, transparent 1.5rem, rgb(159, 168, 255) 1px, rgb(159, 168, 255) calc(1.5rem + 1px));
  box-shadow: 1px 1px 3px rgba(0,0,0,.25);
  height: 10rem;
  width: 250px;
  margin: auto;
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

.createContent {
  display: flex;
  flex-direction: column;
  /* align-items: center; */
  /* justify-content: center; */
  width: 100%;
}

.createDeckText {
  /* margin-top: 0px; */
  color: red;
  font-weight: bold;
  font-size: 18px;
  margin-left: auto;
  margin-right: auto;
}

.deckNameInput {
  /* margin-bottom: 10px; */
  display: flex;
  width: 80%;
  margin-left: auto;
  margin-right: auto;
}

/* Dashboard single card creation button */
.createDeckButton {
  background-color: rgb(245, 241, 241);
  color: rgb(68, 68, 68);
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
  margin-top: 10px;
  margin-bottom: -15px;
}

/* Dashboard single card creation button (HOVER EFFECT) */
.createDeckButton:hover {
  cursor: pointer;
  background-color: rgb(230, 34, 2);
  color: white;
}


/* Dashboard "add a new deck" button/text */
/* .addDeckButton {
  background-color: transparent;
  font-size: 20px;
  height: 150px;
  width: 150px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  color: rgb(230, 34, 2);
} */




/* EDIT PAGE*/
/* entire edit container*/
.editContainer {
  /* display: flex;
  flex-direction: column;
  justify-content: center;
  width: 90%; */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 99%;
  /* align-items: center; */
  /* background: rgb(245, 187, 187); */
}

/* "[User]'s [topic] deck" header CONTAINER */
.greetingContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  /* background-color: red; */
}

/* "[User]'s [topic] deck" header */
.userDeckGreeting {
  color: rgb(36, 42, 95);
  margin-bottom: 60px;
  font-size: 50px;
  display: flex;
  justify-content: center;
}

.editSection {
  /* border: 1px solid black; */
  background-color: white;
  width: 90%;
  padding: 20px 0px 50px 0px;
  margin-bottom: 30px;
}
/* container for a single card on the edit page*/
.editSingleCard {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  padding: 10px 0px 10px 0px;
}

/* question/answer column header container */
.questionAnswerHeaders {
  display: flex;
  justify-content: space-around;
  color: black;
  /* background-color: orange; */
  width: 90%;
}

/* divider between Q and A headers */
/* .headerDivider {
  border-left:1px solid rgb(230, 34, 2);
  border-right:1px solid rgb(230, 34, 2);
  height: 30px;
  position: absolute;
} */

/* question/answer container for individual flashcard */
.questionAnswer {
  font-size: 9px;
  width: 90%;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  padding: 30px 0px 30px 0px;
  border: 1px dotted red;
}

/* divider between any given question and answer */
.divider {
  border-left:1px solid rgb(230, 34, 2);
  border-right:1px solid rgb(230, 34, 2);
  height:50px;
  position: absolute;
}

/* Edit page single card edit/delete buttons container */
.deckEditButtons {
  /* background-color: orange; */
}

/* Edit page single card delete button next to each entry */
.deckEditButton {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgb(238, 238, 238);
  color: rgb(68, 68, 68);
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
  height: 25px;
  margin: 5px 0px 5px 0px;
}

/* Edit page single card delete button next to each entry */
.deckEditButton:hover {
  cursor: pointer;
  background-color: rgb(230, 34, 2);
  color: white;
}



.createCardFlashcard {
  display: flex;
  /* flex-direction: column; */
  align-items: center;
  justify-content: center;
  background-image:
  linear-gradient(180deg, white 3rem, #F0A4A4 calc(3rem), #F0A4A4 calc(3rem + 2px), transparent 1px),
  repeating-linear-gradient(0deg, transparent, transparent 1.5rem, rgb(159, 168, 255) 1px, rgb(159, 168, 255) calc(1.5rem + 1px));
  box-shadow: 1px 1px 3px rgba(0,0,0,.25);
  height: 12rem;
  width: 350px;
  margin: 30px auto auto auto;
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

.createCardText {
  color: red;
  font-weight: bolder;
  font-size: 20px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 5px;
}

.createCardContent {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: space-around;
  line-height: 30px;
  margin-top: 10px;
}

.questionAnswerPrompt {
  color: red;
  font-weight: bold;
  margin: 5px 0px 5px 0px;
}

.createCardQuestion {
  display: flex;
  /* margin: 10px 10px 10px 10px; */
  align-items: center;
}

.createCardAnswer {
  display: flex;
  /* justify-content: center; */
  align-items: center;
  /* margin: 10px 10px 10px 10px; */
}

.cardQAInput {
  margin: 15px 0px 10px 30px;
}

/* Edit single card creation button */
.createCardButton {
  background-color: rgb(245, 241, 241);
  color: rgb(68, 68, 68);
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
  margin: 10px auto -15px auto;
  width: 80%;
}

/* Edit single card creation button (HOVER EFFECT) */
.createCardButton:hover {
  cursor: pointer;
  background-color: rgb(230, 34, 2);
  color: white;
  /* margin-bottom: 0px; */
}

/*
<form
className="createDeckCard"
id="inputForm"
onSubmit={(e) => {
  e.preventDefault();
  this.props.addDeck(e);
}}>
<br />
<div className="createCardContent">
<label htmlFor="addNewCard" className="createCardText">ADD A NEW CARD</label>
<br />
<div className="createCardQuestion">
  <label htmlFor="addNewCard" className="questionAnswerPrompt">Question:</label>
  <input id="createDeck" type="text" className="cardQAInput" />
</div>
<br />

<div className="createCardAnswer">
  <label htmlFor="addNewCard" className="questionAnswerPrompt">Answer:</label>
  <input id="createDeck" type="text" className="cardQAInput" />
</div>
<button className="createCardButton" type="submit">Create Card</button>
</div>
</form>
*/


/* Edit page single card delete button next to each entry */
.deckDeleteButton {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgb(238, 238, 238);
  color: rgb(68, 68, 68);
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
  height: 25px;
  margin: 5px 0px 5px 0px;
}

/* HOVER: Edit page single card delete button next to each entry */
.deckDeleteButton:hover {
  cursor: pointer;
  background-color: rgb(230, 34, 2);
  color: white;
}




/* test of a single question on edit page */
.singleQuestion {
  width: 50%;
  margin: 0px 20px 0px 20px;
  /* padding: 0px 0px 0px 5px; */
  /* border: 1px solid greenyellow; */
  /* color: purple; */
  /* border-right: 1px solid red; */
}

/* test of a single answer on edit page */
.singleAnswer {
  width: 50%;
  /* height: 100%; */
  margin: 0px 20px 0px 20px;
  /* border: 1px solid orange; */
  /* color: green; */
  /* border-left: 1px solid blue; */
}


/* QUIZ PAGE */
/* Full page container (stored in Quiz.jsx parent file) */
.quizContainer {
  width: 100%;
  display: flex;
  flex-direction: column;
  /* align-items: center; */
  /* justify-content: space-between; */
  background-color: white;
  /* margin-top: 200px; */
}

/* 
.allFlashcards {
  width: 100%;
  display: flex;
  /* flex-direction: column; 
  /* align-items: space-between; 
  justify-content: space-evenly;
  margin-top: 100px;
  background-color: blue;
} 
*/

/* Full page container */
/* .flashcardContainer { */
  /* display: flex; */
  /* flex-direction: column; */
  /* background-color: red; */
  /* border: 1px solid blue; */

  /* display: flex;
  align-items: center;
  justify-content: center;
  background-image:
  linear-gradient(180deg, white 3rem, #F0A4A4 calc(3rem), #F0A4A4 calc(3rem + 2px), transparent 1px),
  repeating-linear-gradient(0deg, transparent, transparent 1.5rem, #DDD 1px, #DDD calc(1.5rem + 1px));
  box-shadow: 1px 1px 3px rgba(0,0,0,.25);
  height: 14rem;
  width: 500px;
  margin: 150px auto auto auto;
  /* margin: auto; */
  /* position: relative; */
  /* top: 50%; */
  /* transform: translateY(-50%);  */
/* } */


.allFlashcards {
  width: 100%;
  display: flex;
  /* flex-direction: column; */
  /* align-items: space-between; */
  justify-content: center;
  margin-top: 70px;
  /* background-color: blue; */
}




.singleTopic {
  background: white;
  /* display: flex; */
  justify-content: space-around;
  align-items: center;
  /* flex-direction: column; */
  /* border: 1px solid red; */
  width: 90%;
  /* margin-top: 200px; */
  /* line-height: 0px; */
  /* background-color: red; */
}

.flashcardContainerFront {
  /* border: 1px solid green; */

  /* display: flex; */
  align-items: center;
  justify-content: center;
  /* background-image: */
  /* linear-gradient(180deg, white 3rem, #F0A4A4 calc(3rem), #F0A4A4 calc(3rem + 2px), transparent 1px), */
  /* repeating-linear-gradient(0deg, transparent, transparent 1.5rem, rgb(159, 168, 255) 1px, rgb(159, 168, 255) calc(1.5rem + 1px)); */
  box-shadow: 1px 1px 3px rgba(0,0,0,.25);
  height: 14rem;
  width: 500px;
  margin: 0px 0px 0px 100px;
  padding: 0px 0px;
  /* margin: 0px auto auto auto; */
  /* margin: auto;  */
  position: center;
  top: 50%;
  /* transform: translateY(-50%);  */
}

.flashcardContainerBack {
  /* border: 1px solid blue; */


  /* display: flex; */

  /* align-items: center; */
  justify-content: center;
  /* padding: 30px 0px 0px 0px; */
  /* margin: 80px 0px 0px 0px; */
  background-image:
  linear-gradient(180deg, white 3rem, #F0A4A4 calc(3rem), #F0A4A4 calc(3rem + 2px), transparent 1px),
  repeating-linear-gradient(0deg, transparent, transparent 1.5rem, rgb(159, 168, 255) 1px, rgb(159, 168, 255) calc(1.5rem + 1px));
  box-shadow: 1px 1px 3px rgba(0,0,0,.25);
  height: 14rem;
  width: 500px;
  margin: 0px auto auto auto;
  /* margin: auto;  */
  position: relative;
  top: 50%;
  /* transform: translateY(-50%);  */

}

.flashcardQuestion {
  /* background-color: purple; */
}

/* Single flashcard answer text */
.flashcardAnswer {
  margin-top: 53px;
  line-height: 25px;
}


/*
<div className="quizContainer">
  {flashcards}
  <button>Show me the answer</button>
  <button>Next card</button>
</div>
____

<div className="allFlashcards">
<div className="singleTopic">
  <div className="flashcardContainerFront">
    <h2 className="flashcardQuestion">{this.props.question}</h2>
  </div>

  <div className="flashcardContainerBack">
    <h2 className="flashcardAnswer">{this.props.answer}</h2>
  </div>
</div>
</div>
*/


.card-container {
  display: inline-block;
  margin: 0 auto;
  padding: 0 12px;
  perspective: 900px;
  text-align: center;
}
.card {
position: relative;
  height: 14rem;
  width: 500px;
  margin: 0px auto auto auto;
transition: all 0.6s ease;
transform-style: preserve-3d;
}

.front, .back {
  position: absolute;
  /* background: #FEC606; */
  /* background-image:
  linear-gradient(180deg, white 3rem, #F0A4A4 calc(3rem), #F0A4A4 calc(3rem + 2px), transparent 1px),
  repeating-linear-gradient(0deg, transparent, transparent 1.5rem, rgb(159, 168, 255) 1px, rgb(159, 168, 255) calc(1.5rem + 1px)); */
  top: 0;
  left: 0;
  height: 14rem;
  width: 500px;
  border-radius: 5px;
  color: black;
  box-shadow: 0 27px 55px 0 rgba(0, 0, 0, 0.3), 0 17px 17px 0 rgba(0, 0, 0, 0.15);
  backface-visibility: hidden;
}
.front {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 30px;
}
.back {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 18px;
  background-image:
  linear-gradient(180deg, white 3rem, #F0A4A4 calc(3rem), #F0A4A4 calc(3rem + 2px), transparent 1px),
  repeating-linear-gradient(0deg, transparent, transparent 1.5rem, rgb(159, 168, 255) 1px, rgb(159, 168, 255) calc(1.5rem + 1px));
}
 
.card-container:hover .card {
  transform: rotateY(180deg);
}
.back {
  transform: rotateY(180deg);
}

